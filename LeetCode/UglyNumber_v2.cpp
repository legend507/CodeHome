/*
给定一个表达式2^i*2^j，其中i，j为非负整数。请找到一种方法，生成如下序列：
2^0 * 5^0 = 1
2^1 * 5^0 = 2
2^2 * 5^0 = 4
2^0 * 5^1 = 5
2^3 * 5^0 = 8
2^1 * 5^1 = 10
2^4 * 5^0 = 16
2^2 * 5^1 = 20
2^0 * 5^2 = 25
...
...
...
请大家开动脑筋，找到更多的方法。
*/

/*
很多同学，应该接触过丑数那个题目吧？这个题目相比之下，还要简单一些。i，j分别是2和5的指数, 则方法的过程如下:
	* i,j 从0开始，记录较小的值作为序列的当前生成值。则i=j=0时，最小值为1，就是第一个元素；
	* 两个值都是最小元素，所以i和j，都自增1，在最小值1的基础之上乘以2和5得到2，5， 取较小的2作为序列的值，即2，第二个；
	* 此时，只对i进行变化，自增1，在其上一个值的基础之上乘以2，即，2*2=4，再与5比较最小值
	* 依次类推
*/




/*
还有的同学提到用动态规划的方法，这也是一种很好的思路。
对于dp[n]，判断其是否能够表示为2^i*5^j的形式，可以表示为如下的递归形式
dp[n] = ((n % 2 == 0) && (dp[n/2])) || ((n % 5 == 0) && (dp[n/5]))
并且，显而易见，存在重复利用的递归子过程。但是这个方法，对于n比较大的时候，空间会比较大。
因为中间有太多的n不满足条件，我们仍然做了存储，进行了计算。
*/
