首先说一下卡特兰数列，

H(n) = C(n, 2n) / (n+1) = (2n)!/(n!n!(n+1))
//函数功能: 计算Catalan的第n项
//函数参数: n为项数
//返回值:   第n个Catalan数
int Catalan(int n)
{
	if(n <= 1)
		return 1;

	int *h = new int [n+1]; //保存临时结果
	h[0] = h[1] = 1;        //h(0)和h(1)
	for(int i = 2; i <= n; i++)    //依次计算h(2),h(3)...h(n)
	{
		h[i] = 0;
		for(int j = 0; j < i; j++) //根据递归式计算 h(i)= h(0)*h(i-1)+h(1)*h(i-2) + ... + h(i-1)h(0)
			h[i] += (h[j] * h[i-1-j]);
	}
	int result = h[n]; //保存结果
	delete [] h;       //注意释放空间
	return result;
}


题目1：
矩阵的乘法添加括号我们知道，A*B可以，但是并不表示B*A也可以。假设有N+1个矩阵相乘，不能交换次序。
只能用添加括号的方法来修改乘积的次序。那么有多少种添加括号的方法。H(n)种。

题目2：
出栈次序问题，一个栈，其进栈的序列是从1~n，那么有多少种不同的出栈序列。
解：n 个元素进栈和出栈，总共要经历 n 次进栈和 n 次出栈。这就相当于对这 2n 步操作进行排列。

那么模型如下：对角线将以n*n正方形网格分成两部分，只留下包含对角线在内的下半部分。
由于只能向右走和向下走，可以把向右走认为是在出栈，那么从左上角走到右下角，只需要H(n)步。
因为只需要选择，在哪些地方向走右罢了。而总共肯定是需要向右走n步的。

题目3：
2n个人入场，n个人身上有10块，n个人身上有5块。票价是5块。那么如果要保证一直可以找零，那么入场的次序有多少种?
当有10块的人入场的时候，可以把他们看成是出栈，而5块的人入场当成入栈。则问题变得与出栈次序一样了。

题目4：
把1和0组合成一个序列，1的数目与0的数目都是一样的，为n个。有多少种排序使得从左向右扫描的时候，1的数目一直对0保持优势？
H(n)

题目5：
对于多边形三角形切分的时候，有多少种切分方法。

再如在圆上选择2n个点,将这些点成对连接起来使得所得到的n条线段不相交的方法数


应用1描述：n对括号有多少种匹配方式？
思路：n对括号相当于有2n个符号，n个左括号、n个右括号，可以设问题的解为f(2n)。第0个符号肯定为左括号，
与之匹配的右括号必须为第2i+1字符。因为如果是第2i个字符，那么第0个字符与第2i个字符间包含奇数个字符，
而奇数个字符是无法构成匹配的。
通过简单分析，f(2n)可以转化如下的递推式 f(2n) = f(0)*f(2n-2) + f(2)*f(2n - 4) + ... + f(2n - 4)*f(2) + f(2n-2)*f(0)。
简单解释一下，f(0) * f(2n-2)表示第0个字符与第1个字符匹配，同时剩余字符分成两个部分，一部分为0个字符，另一部分为2n-2个字符，
然后对这两部分求解。f(2)*f(2n-4)表示第0个字符与第3个字符匹配，同时剩余字符分成两个部分，
一部分为2个字符，另一部分为2n-4个字符。依次类推。
假设f(0) = 1，计算一下开始几项，f(2) = 1, f(4) = 2, f(6) = 5。结合递归式，不难发现f(2n) 等于h(n)。

应用2描述：矩阵链乘： P=a1×a2×a3×……×an，依据乘法结合律，不改变其顺序，只用括号表示成对的乘积，试问有几种括号化的方案？
思路：可以这样考虑，首先通过括号化，将P分成两个部分，然后分别对两个部分进行括号化。比如分成(a1)×(a2×a3.....×an)，
然后再对(a1)和(a2×a3.....×an)分别括号化；又如分成(a1×a2)×(a3.....×an)，然后再对(a1×a2)和(a3.....×an)括号化。
设n个矩阵的括号化方案的种数为f(n)，那么问题的解为
f(n) = f(1)*f(n-1) + f(2)*f(n-2) + f(3)*f(n-3) + f(n-1)*f(1)。f(1)*f(n-1)表示分成(a1)×(a2×a3.....×an)两部分，
然后分别括号化。计算开始几项，f(1) = 1, f(2) = 1, f(3) = 2, f(4) = 5。结合递归式，不难发现f(n)等于h(n-1)。

应用3描述：一个栈(无穷大)的进栈序列为1，2，3，…，n，有多少个不同的出栈序列?
思路：这个与加括号的很相似，进栈操作相当于是左括号，而出栈操作相当于右括号。
n个数的进栈次序和出栈次序构成了一个含2n个数字的序列。第0个数字肯定是进栈的数，这个数相应的出栈的数一定是第2i+1个数。
因为如果是2i，那么中间包含了奇数个数，这奇数个肯定无法构成进栈出栈序列。
设问题的解为f(2n)， 那么f(2n) = f(0)*f(2n-2) + f(2)*f(2n-4) + f(2n-2)*f(0)。f(0) * f(2n-2)表示第0个数字进栈后立即出栈，
此时这个数字的进栈与出栈间包含的数字个数为0，剩余为2n-2个数。f(2)*f(2n-4)表示第0个数字进栈与出栈间包含了2个数字，
相当于1 2 2 1，剩余为2n-4个数字。依次类推。
假设f(0) = 1，计算一下开始几项，f(2) = 1, f(4) = 2, f(6) = 5。结合递归式，不难发现f(2n) 等于h(n)。

应用4描述：n个节点构成的二叉树，共有多少种情形？
思路：可以这样考虑，根肯定会占用一个结点，那么剩余的n-1个结点可以有如下的分配方式，T(0, n-1),T(1, n-2),...T(n-1, 0)，
设T(i, j)表示根的左子树含i个结点，右子树含j个结点。
设问题的解为f(n)，那么f(n) = f(0)*f(n-1) + f(1)*f(n-2) + .......+ f(n-2)*f(1) + f(n-1)*f(0)。
假设f(0) = 1，那么f(1) = 1, f(2) = 2, f(3) = 5。结合递推式，不难发现f(n)等于h(n)。

应用5描述：在圆上选择2n个点，将这些点成对连接起来使得所得到的n条线段不相交的方法数？
思路：以其中一个点为基点，编号为0，然后按顺时针方向将其他点依次编号。那么与编号为0相连点的编号一定是奇数，
否则，这两个编号间含有奇数个点，势必会有个点被孤立，即在一条线段的两侧分别有一个孤立点，从而导致两线段相交。
设选中的基点为A，与它连接的点为B，那么A和B将所有点分成两个部分，一部分位于A、B的左边，另一部分位于A、B的右边。
然后分别对这两部分求解即可。
设问题的解f(n)，那么f(n) = f(0)*f(n-2) + f(2)*f(n-4) + f(4)*f(n-6) + ......f(n-4)*f(2) + f(n-2)*f(0)。
f(0)*f(n-2)表示编号0的点与编号1的点相连，此时位于它们右边的点的个数为0，而位于它们左边的点为2n-2。依次类推。
f(0) = 1, f(2) = 1, f(4) = 2。结合递归式，不难发现f(2n) 等于h(n)。

应用6描述：求一个凸多边形区域划分成三角形区域的方法数？
思路：以凸多边形的一边为基，设这条边的2个顶点为A和B。从剩余顶点中选1个，可以将凸多边形分成三个部分，中间是一个三角形，
左右两边分别是两个凸多边形，然后求解左右两个凸多边形。
设问题的解f(n)，其中n表示顶点数，那么f(n) = f(2)*f(n-1) + f(3)*f(n-2) + ......f(n-2)*f(3) + f(n-1)*f(2)。
f(2)*f(n-1)表示三个相邻的顶点构成一个三角形，那么另外两个部分的顶点数分别为2和n-1。
设f(2) = 1，那么f(3) = 1, f(4) = 2, f(5) = 5。结合递推式，不难发现f(n) 等于h(n-2)。

应用7描述：有2n个人排成一行进入剧场。入场费5元。其中只有n个人有一张5元钞票，另外n人只有10元钞票，剧院无其它钞票，
问有多少中方法使得只要有10元的人买票，售票处就有5元的钞票找零？
思路：可以将持5元买票视为进栈，那么持10元买票视为5元的出栈。这个问题就转化成了栈的出栈次序数。
由应用三的分析直接得到结果，f(2n) 等于h(n)。

Catalan数的如下应用
1)	表示长度2n的dyck word的个数。Dyck word是一个有n个X和n个Y组成的字串，且所有的前缀字串皆满足X的个数大于等于Y的个数。以下为长度为6的dyck words:
XXXYYY XYXXYY XYXYXY XXYYXY XXYXYY

2)	将上例的X换成左括号，Y换成右括号，Cn表示所有包含n组括号的合法运算式的个数：((())) ()(()) ()()() (())() (()())

3)	表示有n个节点组成不同构二叉树的方案数
4)	表示有2n+1个节点组成不同构满二叉树（full binary tree）的方案数
5)	表示所有在n × n格点中不越过对角线的单调路径的个数。一个单调路径从格点左下角出发，在格点右上角结束，每一步均为向上或向右。计算这种路径的个数等价于计算Dyck word的个数：X代表“向右”，Y代表“向上”。
6)	表示通过连结顶点而将n + 2边的凸多边形分成三角形的方法个数
7)	表示集合{1, ..., n}的不交叉划分的个数.那么, Cn永远不大于第n项贝尔数. Cn也表示集合{1, ..., 2n}的不交叉划分的个数，其中每个段落的长度为2
8)	表示用n个长方形填充一个高度为n的阶梯状图形的方法个数
