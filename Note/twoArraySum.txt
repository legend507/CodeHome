
Q: 两个数组，从每个数组中取一个数相加，求最大的前k个和 
   比如： 
     数组A：1,2,3 
     数组B：4,5,6 
     则最大的前2个和：9,8。

----------------------------------------------------------------------------------------------------
B数组排序，从大到小。 构造一个大顶堆h。对于i=0,1,2,...,len(A)-1，把三元组(A[i]+B[0], i, 0)放入堆，
按三元组第一个元素排大小。 
  
每次从堆里取出堆顶元素，设其为(s,i,j)。输出s。 
设m=j+1。如果m小于B的长度减一，那么将三元组(A[i]+B[m], i, m)压入堆中。 
重复，直到输出了k个数为止。 
  
时间复杂度：O(len(B)*log(len(B)) + len(A) + k*log(len(A))) 

--------------------------------------------------------------------------------------------------
假设两个数组都是升序的） 
二分sum的下限x。 
对于这个x，一个指针从A数组的头开始往后扫，一个指针从B数组的尾开始往前扫，这样扫一次可以O(A+B)求出不小于x的sum的个数t。 
根据t与k的大小关系继续二分x。 
最后确定了x后可以扫一次并求出所有数对。 
O((A+B)lg(sum)+k
